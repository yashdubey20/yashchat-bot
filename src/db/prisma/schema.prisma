// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_TEMP")
}

// TODO: ADD ALL AUTH VARIABLES
model Auth {
  id                       Int     @id @default(autoincrement())
  noisekey                 String
  signedidentitykey        String
  signedprekey             String
  registrationid           Int
  advsecretkey             String
  nextprekeyid             Int
  firstunuploadedprekeyid  Int
  account                  String?
  me                       String?
  signalidentities         String?
  lastaccountsynctimestamp Int?
  myappstatekeyid          String?

  @@map("auth")
}

model Bday {
  number   String @id
  name     String
  username String
  date     Int
  month    Int
  year     Int?
  place    String

  @@map("bday")
}

model Blacklist {
  Member          Member  @relation(fields: [memberMemberjid], references: [memberjid])
  memberMemberjid String  @id @map("memberjid")
  reason          String?
  admin           String?

  @@map("blacklist")
}

model Countmember {
  // TODO: CHECK(warning BETWEEN 0 and 3)
  Group           Group  @relation(fields: [groupGroupjid], references: [groupjid])
  groupGroupjid   String @map("groupjid")
  Member          Member @relation(fields: [memberMemberjid], references: [memberjid])
  memberMemberjid String @map("memberjid")

  message_count Int @default(0)
  warning_count Int @default(0)
  video_count   Int @default(0)

  @@id([memberMemberjid, groupGroupjid])
  @@map("countmember")
}

model Group {
  groupjid          String        @id
  gname             String
  link              String?       @unique
  commands_disabled String[]
  Countmember       Countmember[]

  @@map("groups")
}

model Member {
  memberjid   String        @id
  name        String
  donation    Int           @default(0)
  milestones  String[]
  Blacklist   Blacklist?
  Countmember Countmember[]

  @@map("members")
}

model Meta {
  variable     String   @id
  value        Boolean
  last_updated DateTime @updatedAt

  @@map("meta")
}

model Milestonetext {
  sno       Int    @unique @default(autoincrement())
  milestone String @id

  @@map("milestonetext")
}

model News {
  headline String   @id
  at       DateTime @updatedAt

  @@map("news")
}

model Voting {
  groupjid          String   @id
  is_started        Boolean
  started_by        String
  title             String
  choices           String[]
  count             Int[]
  members_voted_for String[]
  voted_members     String[]

  @@map("voting")
}

model Unknowncmd {
  command String @id
  count   Int    @default(0)

  @@map("unknowncmd")
}
